name: Pre-merge integration test

on:
  workflow_call:
    secrets:
      AWS_PRE_MERGE_ROLE_ARN: { required: true }
      PREMERGE_PARAMETER_PREFIX_STACK_NAME: { required: true }
      PREMERGE_TEST_ENVIRONMENT: { required: true }
      API_KEY_FRAUD_DEV: { required: true }
      CORE_STUB_URL: { required: true }
      CORE_STUB_USERNAME: { required: true }
      CORE_STUB_PASSWORD: { required: true }
      ORCHESTRATOR_STUB_URL: { required: true }
      AWS_PRE_MERGE_S3_BUCKET_NAME: { required: true }

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: {}
    timeout-minutes: 15
    concurrency:
      group: build-development-${{ github.head_ref || github.ref_name }}
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-overwrite-existing: true
      - name: Build SAM application
        uses: govuk-one-login/github-actions/sam/build-application@main
        id: build
        with:
          template: infrastructure/lambda/template.yaml
          cache-key: ipv-cri-fraud-api
          pull-repository: true
      - name: Get stack name vars
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    concurrency:
      group: deploy-development-${{ github.head_ref || github.ref_name }}
    environment:
      name: development
      url: ${{ steps.deploy.outputs.stack-url }}
    outputs:
      aws-region: ${{ steps.deploy.outputs.aws-region }}
      stack-name: ${{ steps.deploy.outputs.stack-name }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Deploy stack
        uses: govuk-one-login/github-actions/sam/deploy-stack@main
        id: deploy
        with:
          sam-deployment-bucket: ${{ secrets.AWS_PRE_MERGE_S3_BUCKET_NAME }}
          aws-role-arn: ${{ secrets.AWS_PRE_MERGE_ROLE_ARN }}
          stack-name: pre-merge-${{ needs.build.outputs.sha_short}}
          cache-key: ipv-cri-fraud-api
          s3-prefix: pre-merge
          pull-repository: true
          delete-failed-stack: true
          tags: |
            cri:component=ipv-cri-fraud-api
            cri:stack-type=pre-merge
            cri:application=Lime
            cri:deployment-source=github-actions
          parameters: |
            DeploymentType=pre-merge-integration
            UseApiKey=" "
            ParameterPrefix=${{ secrets.PREMERGE_PARAMETER_PREFIX_STACK_NAME }}
            Environment=dev

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: deploy
    concurrency:
      group: test-development-${{ github.head_ref || github.ref_name }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
          submodules: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
          cache: gradle
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-overwrite-existing: true
      - name: Build Cache
        uses: actions/cache@v4
        with:
          path: |
            .gradle/
            */build/
            */**/build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_PRE_MERGE_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Run pre-merge API tests against pre-merge test stack
        env:
          ENVIRONMENT: ${{ secrets.PREMERGE_TEST_ENVIRONMENT }}
          APIGW_API_KEY: ${{ secrets.API_KEY_FRAUD_DEV }}
          coreStubUrl: ${{ secrets.CORE_STUB_URL }}
          coreStubUsername: ${{ secrets.CORE_STUB_USERNAME }}
          coreStubPassword: ${{ secrets.CORE_STUB_PASSWORD }}
          orchestratorStubUrl: ${{ secrets.ORCHESTRATOR_STUB_URL }}
          CUCUMBER_PUBLISH_ENABLED: true
          BROWSER: chrome-headless
        run: |
          echo "ðŸ¤ž now run integration tests..."
          STACK_NAME=${{ needs.deploy.outputs.stack-name }}
          API_GATEWAY_ID_PRIVATE=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == "PrivateFraudApiGatewayId").OutputValue')
          API_GATEWAY_ID_PUBLIC=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == "FraudApiGatewayId").OutputValue')
          export API_GATEWAY_ID_PRIVATE=$API_GATEWAY_ID_PRIVATE
          export API_GATEWAY_ID_PUBLIC=$API_GATEWAY_ID_PUBLIC
          export API_GATEWAY_KEY=${{ secrets.API_KEY_FRAUD_DEV }}
          cd acceptance-tests && ./gradlew cucumber -P tags=@pre-merge

      - name: Delete pre-merge test stack
        if: always()
        run: |
          STACK_NAME=${{ needs.deploy.outputs.stack-name }}
          aws cloudformation delete-stack --region eu-west-2 --stack-name $STACK_NAME
