AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity Fraud Credential Issuer API"
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W2031
        - W1020
        - E3020

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: "common-cri-api"
  ParameterPrefix:
    Type: String
    Default: "none"
    Description: If set the this value will be used for ParameterStore prefix instead of AWS::StackName
  DeploymentType:
    Type: String
    Default: "pipeline"
    Description: Private Api gateway resources are not be reachable in stacks deployed via pipelines, this override enables less restrictive settings for manual/pre-merge-test deployments.
  UseApiKey:
    Type: String
    Default: "true"
    Description: Value used to indicate if the public api should be protected by a api key.
  CreateMockTxmaResourcesOverride:
    Description: "Mock TXMA SQS Queue"
    Type: String
    Default: "false"

Conditions:
  IsDeployedFromPipeline: !Equals
    - !Ref DeploymentType
    - "pipeline"
  # Don't send logs in dev to avoid overwhelming the destination with debug
  LogSendingEnabled: !And
    - !Not [!Equals [!Ref Environment, "dev"]]
    - !Condition IsDeployedFromPipeline
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  UsingCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  AddProvisionedConcurrency: !Not
    - !Equals
      - !FindInMap [ProvisionedConcurrency, Environment, !Ref 'Environment']
      -  0
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseParameterPrefix:
    Fn::Not:
      - Fn::Equals:
          - !Ref ParameterPrefix
          - "none"
  CreateMockTxmaResources:
    Fn::And:
      - !Equals [!Ref Environment, "dev"]
      - !Equals [ !Ref CreateMockTxmaResourcesOverride, "true" ]

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UsingCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-LambdaSecurityGroup
      SubnetIds: !Split [ ",", !ImportValue cri-vpc-PrivateSubnets ]
    Timeout: 30 # seconds
    Runtime: java17
    AutoPublishAlias: live
    Tracing: Active
    MemorySize: !FindInMap [MemorySizeMapping, Environment, !Ref 'Environment']
    Architectures:
      - arm64
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO
        SQS_AUDIT_EVENT_QUEUE_URL: !If
          - CreateMockTxmaResources
          - !GetAtt MockAuditEventQueue.QueueUrl
          - Fn::ImportValue: AuditEventQueueUrl
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        COMMON_PARAMETER_NAME_PREFIX: !Ref CommonStackName
        ENVIRONMENT: !Ref Environment
        PARAMETER_PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
    ProvisionedConcurrencyConfig:
      !If
      - AddProvisionedConcurrency
      - ProvisionedConcurrentExecutions: !FindInMap [ProvisionedConcurrency, Environment, !Ref 'Environment']
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:JAVA_LAYER}}' # or NODEJS_LAYER or PYTHON_LAYER
        - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]

Mappings:
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  ProvisionedConcurrency:
    Environment:
      dev: 0
      build: 1
      staging: 1
      integration: 1
      production: 1

  MemorySizeMapping:
    Environment:
      dev: 2048
      build: 4096
      staging: 2048
      integration: 2048
      production: 4096

  MaxJwtTtlMapping:
    Environment:
      dev: "6"
      build: "6"
      staging: "6"
      integration: "6"
      production: "6"

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: MONTHS
      build: MONTHS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

  FraudCriAudienceMapping:
    Environment:
      dev: "https://review-f.dev.account.gov.uk"
      build: "https://review-f.build.account.gov.uk"
      staging: "https://review-f.staging.account.gov.uk"
      integration: "https://review-f.integration.account.gov.uk"
      production: "https://review-f.account.gov.uk"

  # Set as EnvVar on the CheckLambda
  # devEnvironmentOnlyEnhancedDebug changes CRI behaviour
  # Do not enable outside of Dev
  DevEnvironmentOnlyEnhancedDebugMappingEnvVar:
    Environment:
      dev: "false"
      build: "false"
      staging: "false"
      integration: "false"
      production: "false"

  FeatureFlagMapping:
    dev:
      VcExpiryRemoved: "true"
      VcContainsUniqueIdMapping: "true"
      IncludeKidInVc: "true"
      IncludeAddressInPepReq: "false"
    build:
      VcExpiryRemoved: "true"
      VcContainsUniqueIdMapping: "true"
      IncludeKidInVc: "false"
      IncludeAddressInPepReq: "false"
    staging:
      VcExpiryRemoved: "true"
      VcContainsUniqueIdMapping: "true"
      IncludeKidInVc: "false"
      IncludeAddressInPepReq: "false"
    integration:
      VcExpiryRemoved: "true"
      VcContainsUniqueIdMapping: "true"
      IncludeKidInVc: "false"
      IncludeAddressInPepReq: "true"
    production:
      VcExpiryRemoved: "true"
      VcContainsUniqueIdMapping: "true"
      IncludeKidInVc: "false"
      IncludeAddressInPepReq: "true"

Resources:

####################################################################
#                                                                  #
# API Gateway                                                 #
#                                                                  #
####################################################################

  PublicFraudApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public Fraud CRI API with metrics
      Auth:
        ApiKeyRequired: !Ref UseApiKey
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicFraudApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PublicFraudApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './public-api.yaml'
        components:
          schemas:
            TokenResponse:
              title: AccessToken
              required:
                - "access_token"
                - "expires_in"
              type: "object"
              properties:
                access_token:
                  type: string
                  description: The Access Token for the given token request.
                token_type:
                  type: string
                  description: The Token Type issued.
                  example: Bearer
                expires_in:
                  type: string
                  description: The expiry time, in seconds.
                  example: '3600'
                refresh_token:
                  type: string
                  description: The refresh token is optional, not currently applicable.
            Error:
              title: "Error Schema"
              type: "object"
              properties:
                message:
                  type: "string"
          securitySchemes:
            !If
            - IsDeployedFromPipeline
            -
              api_key:
                type: "apiKey"
                name: "x-api-key"
                in: "header"
            - !Ref "AWS::NoValue"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PrivateFraudApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private Fraud CRI API with metrics
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateFraudApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PrivateFraudApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './private-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsDeployedFromPipeline, PRIVATE, REGIONAL]
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - !If
              - IsDeployedFromPipeline
              - Action: 'execute-api:Invoke'
                Effect: Deny
                Principal: '*'
                Resource:
                  - 'execute-api:/*'
                Condition:
                  StringNotEquals:
                    aws:SourceVpce: !ImportValue cri-vpc-ApiGatewayVpcEndpointId
              - !Ref AWS::NoValue


  PublicFraudApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicFraudApi}-public-AccessLogs
      RetentionInDays: 365

  PublicFraudApiAccessLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: LogSendingEnabled
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PublicFraudApiAccessLogGroup

  PrivateFraudApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateFraudApi}-private-AccessLogs
      RetentionInDays: 365

  PrivateFraudApiAccessLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: LogSendingEnabled
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PrivateFraudApiAccessLogGroup

####################################################################
#                                                                  #
# Identity checking Function                                       #
#                                                                  #
####################################################################

  IdentityCheckingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/fraudcheck
      Handler: uk.gov.di.ipv.cri.fraud.api.handler.FraudHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-identitycheck"
          ENVIRONMENT: !Ref Environment
          DEV_ENVIRONMENT_ONLY_ENHANCED_DEBUG: !FindInMap [ DevEnvironmentOnlyEnhancedDebugMappingEnvVar, Environment, !Ref Environment ]
          ENV_VAR_FEATURE_FLAG_INCLUDE_ADDRESS_IN_PEP_REQ: !FindInMap [ FeatureFlagMapping, !Ref Environment, IncludeAddressInPepReq ]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref FraudTable
        - DynamoDBWritePolicy:
            TableName: !Ref FraudTable
        - DynamoDBReadPolicy:
            TableName: !Ref ExperianTokenTable
        - DynamoDBWritePolicy:
            TableName: !Ref ExperianTokenTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !If
              - CreateMockTxmaResources
              - !GetAtt MockAuditEventQueueEncryptionKey.Arn
              - Fn::ImportValue: AuditEventQueueEncryptionKeyArn
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/contraindicationMappings"
                  - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/zeroScoreUcodes"
                  - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/noFileFoundThreshold"
                  - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/testStrategy/noFileFoundThreshold"
                  - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FraudTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/CrosscoreV2/tokenTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/CrosscoreV2*"
                  - PREFIX: !If [ UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName ]
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub
                  - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/CrosscoreV2"
                  - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
        - SQSSendMessagePolicy:
            QueueName: !If [CreateMockTxmaResources, !GetAtt MockAuditEventQueue.QueueName, !ImportValue AuditEventQueueName]

  IdentityCheckingFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IdentityCheckingFunction}"
      RetentionInDays: 30

  IdentityCheckingFunctionLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: LogSendingEnabled
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IdentityCheckingFunctionLogGroup

  IdentityCheckingFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IdentityCheckingFunction.Arn
      Principal: apigateway.amazonaws.com

####################################################################
#                                                                  #
# Issue Credential Function                                        #
#                                                                  #
####################################################################

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: uk.gov.di.ipv.cri.fraud.api.handler.IssueCredentialHandler::handleRequest
      CodeUri: ../../lambdas/issuecredential
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-issuecredential"
          ENVIRONMENT: !Ref Environment
          ENV_VAR_FEATURE_FLAG_VC_EXPIRY_REMOVED: !FindInMap [ FeatureFlagMapping, !Ref Environment, VcExpiryRemoved ]
          ENV_VAR_FEATURE_FLAG_VC_CONTAINS_UNIQUE_ID: !FindInMap [ FeatureFlagMapping, !Ref Environment, VcContainsUniqueIdMapping ]
          INCLUDE_VC_KID: !FindInMap [ FeatureFlagMapping, !Ref Environment, IncludeKidInVc ]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref FraudTable
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName: !If [CreateMockTxmaResources, !GetAtt MockAuditEventQueue.QueueName, !ImportValue AuditEventQueueName]
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FraudTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub
                - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PREFIX}/contraindicationMappings"
                - PREFIX: !If [UseParameterPrefix, !Ref ParameterPrefix , !Ref AWS::StackName]
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/release-flags/vc-expiry-removed"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/release-flags/vc-contains-unique-id"
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !If
              - CreateMockTxmaResources
              - !GetAtt MockAuditEventQueueEncryptionKey.Arn
              - Fn::ImportValue: AuditEventQueueEncryptionKeyArn

  IssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
      RetentionInDays: 30

  IssueCredentialFunctionLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: LogSendingEnabled
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IssueCredentialFunction.Arn
      Principal: apigateway.amazonaws.com



  #############################
  # New consumer queue for testing TxMA header
  #############################

  MockAuditEventQueue:
    Type: AWS::SQS::Queue
    Condition: CreateMockTxmaResources
    Properties:
      MessageRetentionPeriod: 3600 # 1 hour
      KmsMasterKeyId: !Ref MockAuditEventQueueEncryptionKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MockAuditEventDeadLetterQueue.Arn
        maxReceiveCount: 10

  MockAuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: CreateMockTxmaResources
    Properties:
      MessageRetentionPeriod: 604800 # 7 days
      KmsMasterKeyId: !Ref MockAuditEventQueueEncryptionKeyAlias

  MockAuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Condition: CreateMockTxmaResources
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT

  MockAuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Condition: CreateMockTxmaResources
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/auditEventQueueEncryptionKey
      TargetKeyId: !Ref MockAuditEventQueueEncryptionKey

####################################################################
#                                                                  #
# Database Tables                                                  #
#                                                                  #
####################################################################

  FraudTable:
    Type: "AWS::DynamoDB::Table" # enable encryption with customer managed kms key. Will need new kms key
    Properties:
      TableName: !Sub "fraud-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true

  ExperianTokenTable:
    Type: "AWS::DynamoDB::Table" # enable encryption with customer managed kms key. Will need new kms key
    Properties:
      TableName: !Sub "crosscorev2-experian-token-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS

####################################################################
#                                                                  #
# API config                                                 #
#                                                                  #
####################################################################

  PublicFraudApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsDeployedFromPipeline
    DependsOn:
      - PublicFraudApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PublicFraudApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        RateLimit: 200 # allowed requests per second
        BurstLimit: 400 # requests the API can handle concurrently

  PrivateFraudApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsDeployedFromPipeline
    DependsOn:
      - PrivateFraudApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateFraudApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        RateLimit: 200 # allowed requests per second
        BurstLimit: 400 # requests the API can handle concurrently

  LinkUsagePlanApiKey1:
    Condition: IsDeployedFromPipeline
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicFraudApiUsagePlan

  LinkUsagePlanApiKey2:
    Condition: IsDeployedFromPipeline
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicFraudApiUsagePlan

####################################################################
#                                                                  #
# Parameters                                                       #
#                                                                  #
####################################################################

  ParameterFraudItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/FraudTableName"
      Value: !Sub fraud-${AWS::StackName}
      Type: String
      Description: Fraud item dynamodb table name

  ParameterTokenItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/CrosscoreV2/tokenTableName"
      Value: !Sub crosscorev2-experian-token-${AWS::StackName}
      Type: String
      Description: Token item dynamodb table name

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref Environment]
      Description: default time to live for an JWT in (seconds)

  FraudCriAudienceParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/FraudCriAudience"
      Type: String
      Value: !FindInMap [FraudCriAudienceMapping, Environment, !Ref 'Environment']
      Description: The fraud credential issuer (audience) identifier

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [ JwtTtlUnitMapping, Environment, !Ref Environment ]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

####################################################################
#                                                                  #
# Alerts                                                           #
#                                                                  #
####################################################################

  FraudLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} lambda errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions: []
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  FraudAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} API Gateway 5XX errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      Dimensions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PublicFraudApi"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 300
            Stat: Sum

  FraudPepCheckFail:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} PEP check failed
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      Namespace: di-ipv-cri-fraud-api
      MetricName: pep_check_request_failed
      Statistic: Sum
      Dimensions:
        - Name: Service
          Value: "di-ipv-cri-fraud-api-identitycheck"
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  FraudAPIGW5XXErrorsPrivatePercentage:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} Private API Gateway Percentage 5XX Errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: PercentageFailure
          ReturnData: true
          Expression: (m2/m1)*100
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 60
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 60
            Stat: Sum

  ExperianAuthenticateTokenRequestDeniedAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment} - Fraud - Experian Authenticate Token Request Denied Alarm"
      AlarmDescription: !Sub ${Environment} Fraud Authentication Token endpoint returned multiple invalid responses to a token request (failed to authenticate and acquire new token)
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: [ ]
      EvaluationPeriods: 4
      DatapointsToAlarm: 4
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: CombinedTokenFailure
          ReturnData: true
          Expression: m1 + m2
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: di-ipv-cri-fraud-api
              MetricName: token_api_response_type_invalid
              Dimensions:
                - Name: Service
                  Value: di-ipv-cri-fraud-api-identitycheck
            Period: 60
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: di-ipv-cri-fraud-api
              MetricName: token_failed_to_generate_new_token
              Dimensions:
                - Name: Service
                  Value: di-ipv-cri-fraud-api-identitycheck
            Period: 60
            Stat: Sum

  IdentityCheckLambdaConcurrencyThresholdReached:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} - IdentityCheck Lambda concurrency threshold reached
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Average
      Dimensions:
        - Name: FunctionName
          Value: !Ref IdentityCheckingFunction
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 12
      Threshold: 9
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueCredentialLambdaConcurrencyThresholdReached:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} - IssueCredential Lambda concurrency threshold reached
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Average
      Dimensions:
        - Name: FunctionName
          Value: !Ref IssueCredentialFunction
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 12
      Threshold: 6
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CommonAPISessionLambdaConcurrencyThresholdReached:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} - Common API Session Lambda concurrency threshold reached
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${CommonStackName}-SessionFunction"
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 12
      Threshold: 6
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CommonAPIAuthorizationLambdaConcurrencyThresholdReached:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} - Common API Authorization Lambda concurrency threshold reached
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${CommonStackName}-AuthorizationFunction"
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 12
      Threshold: 6
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CommonAPIAccessTokenLambdaConcurrencyThresholdReached:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} - Common API AccessToken Lambda concurrency threshold reached
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub "${CommonStackName}-AccessTokenFunction"
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 12
      Threshold: 6
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ####################################################################
  #                                                                  #
  # Alarm setup                                                      #
  #                                                                  #
  ####################################################################

  AlarmTopicFraud:
    Type: AWS::SNS::Topic
    Metadata:
      SamResourceId: AlarmTopicFraud
  AlarmTopicSubscriptionPagerDutyFraud:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn:
        Ref: AlarmTopicFraud
      Endpoint:
        Fn::Sub: '{{resolve:ssm:/alerting/pagerduty-fraud/url}}'
      Protocol: https
    Metadata:
      SamResourceId: AlarmTopicSubscriptionPagerDutyFraud
  AlarmPublishToTopicPolicyFraud:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - Ref: AlarmTopicFraud
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sns:Publish
            Resource:
              Ref: AlarmTopicFraud
            Principal:
              Service: cloudwatch.amazonaws.com
            Condition:
              ArnLike:
                AWS:SourceArn:
                  Fn::Sub: arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:*
    Metadata:
      SamResourceId: AlarmPublishToTopicPolicyFraud

####################################################################
#                                                                  #
# Outputs                                                          #
#                                                                  #
####################################################################

Outputs:
  StackName:
    Description: "CloudFormation stack name"
    Value: !Sub "${AWS::StackName}"

  SessionApiUrl:
    Description: "URL for the Fraud API /session resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/session"
    Export:
      Name: !Sub ${AWS::StackName}-SessionApiUrl

  PublicFraudApiUrl:
    Description: "URL for the Fraud API /identity-check resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/identity-check"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiUrl

  TokenApiUrl:
    Description: "URL for the Fraud API /token resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/token"
    Export:
      Name: !Sub ${AWS::StackName}-TokenApiUrl

  CredentialIssueApiUrl:
    Description: "URL for the Fraud API /credential/issue resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/credential/issue"
    Export:
      Name: !Sub ${AWS::StackName}-CredentialIssueApiUrl

  FraudApiBaseUrl:
    Description: "Base url of the Fraud CRI API, please reference the PublicFraudApiBaseUrl"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-FraudApiBaseUrl

  FraudApiGatewayId:
    Description: "API GatewayID of the public Fraud CRI API, please reference the PublicFraudApiGatewayId"
    Value: !Sub "${PublicFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-FraudApiGatewayId

  PublicFraudApiBaseUrl:
    Description: "Base url of the public Fraud CRI API"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiBaseUrl

  PublicFraudApiGatewayId:
    Description: "API GatewayID of the public Fraud CRI API"
    Value: !Sub "${PublicFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiGatewayId

  PrivateFraudApiBaseUrl:
    Description: "Base url of the privateFraud CRI API"
    Value: !Sub "https://${PrivateFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateFraudApiBaseUrl

  PrivateFraudApiGatewayId:
    Description: "API GatewayID of the private Fraud CRI API"
    Value: !Sub "${PrivateFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateFraudApiGatewayId
