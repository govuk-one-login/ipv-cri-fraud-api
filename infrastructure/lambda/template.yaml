AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity Fraud Credential Issuer API"

Parameters:
  CodeSigningEnabled:
    Type: "String"
    Default: "true"
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: "common-cri-api"

Conditions:
  EnforceCodeSigning: !Equals
    - !Ref CodeSigningEnabled
    - true
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsStubEnvironment: !Or
    - !Equals [ !Ref Environment, dev]
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
  IsProdLikeEnvironment: !Or
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  IsPerformance: !Or
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, production ]
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-LambdaSecurityGroup
      SubnetIds: !Split [ ",", !ImportValue cri-vpc-PrivateSubnets ]
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - EnforceCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 30 # seconds
    Runtime: java11
    AutoPublishAlias: live
    Tracing: Active
    MemorySize: !FindInMap [MemorySizeMapping, Environment, !Ref 'Environment']
    Architectures:
      - arm64
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO
        SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        COMMON_PARAMETER_NAME_PREFIX: !Ref CommonStackName
        ENVIRONMENT: !Ref Environment
    ProvisionedConcurrencyConfig: !If
      - IsPerformance
      - ProvisionedConcurrentExecutions: 1
      - !Ref AWS::NoValue

Mappings:
  MemorySizeMapping:
    Environment:
      dev: 512
      build: 2048
      staging: 1024
      integration: 1024
      production: 2048

  MaxJwtTtlMapping:
    Environment:
      dev: "6"
      build: "6"
      staging: "6"
      integration: "6"
      production: "6"

  VcExpiryRemoved:
    Environment:
      dev: "true"
      build: "true"
      staging: "true"
      integration: "true"
      production: "true"

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: MONTHS
      build: MONTHS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

  FraudCriAudienceMapping:
    Environment:
      dev: "https://review-f.dev.account.gov.uk"
      build: "https://review-f.build.account.gov.uk"
      staging: "https://review-f.staging.account.gov.uk"
      integration: "https://review-f.integration.account.gov.uk"
      production: "https://review-f.account.gov.uk"

  FraudCriPepEnabledMapping:
    Environment:
      dev: "true"
      build: "true"
      staging: "true"
      integration: "true"
      production: "true"

  ActivityHistoryScoreInVcMapping:
    Environment:
      dev: "true"
      build: "true"
      staging: "true"
      integration: "true"
      production: "true"


Resources:

####################################################################
#                                                                  #
# API Gateway                                                 #
#                                                                  #
####################################################################

  PublicFraudApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public Fraud CRI API with metrics
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicFraudApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PublicFraudApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './public-api.yaml'
        components:
          schemas:
            TokenResponse:
              title: AccessToken
              required:
                - "access_token"
                - "expires_in"
              type: "object"
              properties:
                access_token:
                  type: string
                  description: The Access Token for the given token request.
                token_type:
                  type: string
                  description: The Token Type issued.
                  example: Bearer
                expires_in:
                  type: string
                  description: The expiry time, in seconds.
                  example: '3600'
                refresh_token:
                  type: string
                  description: The refresh token is optional, not currently applicable.
            Error:
              title: "Error Schema"
              type: "object"
              properties:
                message:
                  type: "string"
          securitySchemes:
            !If
            - IsNotDevEnvironment
            -
              api_key:
                type: "apiKey"
                name: "x-api-key"
                in: "header"
            - !Ref "AWS::NoValue"
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PrivateFraudApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private Fraud CRI API with metrics
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateFraudApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PrivateFraudApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './private-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsNotDevEnvironment, PRIVATE, REGIONAL]
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - Action: 'execute-api:Invoke'
              Effect: !If [IsNotDevEnvironment, Deny, Allow]
              Principal: '*'
              Resource:
                - 'execute-api:/*'
              Condition:
                StringNotEquals:
                  aws:SourceVpce: !If
                    - CreateDevResources
                    - vpce-082cab7c78139eb54
                    - !ImportValue cri-vpc-ApiGatewayVpcEndpointId

  PublicFraudApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicFraudApi}-public-AccessLogs
      RetentionInDays: 365

  PublicFraudApiAccessLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PublicFraudApiAccessLogGroup

  PrivateFraudApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateFraudApi}-private-AccessLogs
      RetentionInDays: 365

  PrivateFraudApiAccessLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PrivateFraudApiAccessLogGroup

####################################################################
#                                                                  #
# Identity checking Function                                       #
#                                                                  #
####################################################################

  IdentityCheckingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/fraudcheck
      Handler: uk.gov.di.ipv.cri.fraud.api.handler.FraudHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-identitycheck"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Ref FraudTable
        - Statement:
            - Sid: ReadParameterStorePolicy
              Effect: Allow
              Action:
                - 'ssm:GetParameter*'
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/credentialIssuers/fraud*'
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Environment}/credentialIssuers/fraud*'
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - !ImportValue AuditEventQueueEncryptionKeyArn
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/contraindicationMappings"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FraudTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/pepEnabled"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/zeroScoreUcodes"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/noFileFoundThreshold"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName

  IdentityCheckingFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IdentityCheckingFunction}"
      RetentionInDays: 30

  IdentityCheckingFunctionLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IdentityCheckingFunctionLogGroup

  IdentityCheckingFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IdentityCheckingFunction.Arn
      Principal: apigateway.amazonaws.com

####################################################################
#                                                                  #
# Issue Credential Function                                        #
#                                                                  #
####################################################################

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: uk.gov.di.ipv.cri.fraud.api.handler.IssueCredentialHandler::handleRequest
      CodeUri: ../../lambdas/issuecredential
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-issuecredential"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref FraudTable
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/FraudTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/contraindicationMappings"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/activityHistoryEnabled"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/release-flags/vc-expiry-removed"
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - !ImportValue AuditEventQueueEncryptionKeyArn

  IssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
      RetentionInDays: 30

  IssueCredentialFunctionLogGroupSubscriptionFilterCsls:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IssueCredentialFunction.Arn
      Principal: apigateway.amazonaws.com

####################################################################
#                                                                  #
# Database Tables                                                  #
#                                                                  #
####################################################################

  FraudTable:
    Type: "AWS::DynamoDB::Table" # enable encryption with customer managed kms key. Will need new kms key
    Properties:
      TableName: !Sub "fraud-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true

####################################################################
#                                                                  #
# API config                                                 #
#                                                                  #
####################################################################

  PublicFraudApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    DependsOn:
      - PublicFraudApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PublicFraudApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  PrivateFraudApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    DependsOn:
      - PrivateFraudApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateFraudApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  LinkUsagePlanApiKey1:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicFraudApiUsagePlan

  LinkUsagePlanApiKey2:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicFraudApiUsagePlan

####################################################################
#                                                                  #
# Parameters                                                       #
#                                                                  #
####################################################################

  ParameterReleaseFlagsVcExpiryRemoved:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !If
        - IsDevEnvironment
        - !Sub "/${AWS::StackName}/release-flags-vc-expiry-removed-not-used-in-dev"
        - !Sub "/release-flags/vc-expiry-removed"
      Value: !FindInMap [ VcExpiryRemoved, Environment, !Ref Environment ]
      Type: String
      Description: Expiry date release toggle

  ParameterFraudItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/FraudTableName"
      Value: !Sub fraud-${AWS::StackName}
      Type: String
      Description: Fraud item dynamodb table name

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref Environment]
      Description: default time to live for an JWT in (seconds)

  FraudCriAudienceParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/FraudCriAudience"
      Type: String
      Value: !FindInMap [FraudCriAudienceMapping, Environment, !Ref 'Environment']
      Description: The fraud credential issuer (audience) identifier

  FraudCriPepEnabledParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/pepEnabled"
      Type: String
      Value: !FindInMap [ FraudCriPepEnabledMapping, Environment, !Ref 'Environment' ]
      Description: The fraud PEP enabled feature toggle

  ParameterReleaseFlagsVcActivityHistory:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/activityHistoryEnabled"
      Type: String
      Value: !FindInMap [ ActivityHistoryScoreInVcMapping, Environment, !Ref 'Environment' ]
      Description: Feature toggle to enable or disable activity history within the VC

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [ JwtTtlUnitMapping, Environment, !Ref Environment ]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

####################################################################
#                                                                  #
# Alerts                                                           #
#                                                                  #
####################################################################

  FraudLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} lambda errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions: []
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  FraudAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} API Gateway 5XX errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      Dimensions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PublicFraudApi"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 300
            Stat: Sum

  FraudPepCheckFail:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} PEP check failed
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      Namespace: di-ipv-cri-fraud-api
      MetricName: pep_check_request_failed
      Statistic: Sum
      Dimensions:
        - Name: Service
          Value: "di-ipv-cri-fraud-api-identitycheck"
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  FraudAPIGW5XXErrorsPrivatePercentage:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub Fraud ${Environment} Private API Gateway Percentage 5XX Errors
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopicFraud
      OKActions:
        - !Ref AlarmTopicFraud
      InsufficientDataActions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: PercentageFailure
          ReturnData: true
          Expression: (m2/m1)*100
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 60
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateFraudApi"
            Period: 60
            Stat: Sum

  ####################################################################
  #                                                                  #
  # Alarm setup                                                      #
  #                                                                  #
  ####################################################################

  AlarmTopicFraud:
    Type: AWS::SNS::Topic
    Metadata:
      SamResourceId: AlarmTopicFraud
  AlarmTopicSubscriptionPagerDutyFraud:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn:
        Ref: AlarmTopicFraud
      Endpoint:
        Fn::Sub: '{{resolve:ssm:/alerting/pagerduty-fraud/url}}'
      Protocol: https
    Metadata:
      SamResourceId: AlarmTopicSubscriptionPagerDutyFraud
  AlarmPublishToTopicPolicyFraud:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - Ref: AlarmTopicFraud
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sns:Publish
            Resource:
              Ref: AlarmTopicFraud
            Principal:
              Service: cloudwatch.amazonaws.com
            Condition:
              ArnLike:
                AWS:SourceArn:
                  Fn::Sub: arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:*
    Metadata:
      SamResourceId: AlarmPublishToTopicPolicyFraud

Outputs:
  StackName:
    Description: "CloudFormation stack name"
    Value: !Sub "${AWS::StackName}"

  SessionApiUrl:
    Description: "URL for the Fraud API /session resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/session"
    Export:
      Name: !Sub ${AWS::StackName}-SessionApiUrl

  PublicFraudApiUrl:
    Description: "URL for the Fraud API /identity-check resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/identity-check"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiUrl

  TokenApiUrl:
    Description: "URL for the Fraud API /token resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/token"
    Export:
      Name: !Sub ${AWS::StackName}-TokenApiUrl

  CredentialIssueApiUrl:
    Description: "URL for the Fraud API /credential/issue resource"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/credential/issue"
    Export:
      Name: !Sub ${AWS::StackName}-CredentialIssueApiUrl

  FraudApiBaseUrl:
    Description: "Base url of the Fraud CRI API, please reference the PublicFraudApiBaseUrl"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-FraudApiBaseUrl

  FraudApiGatewayId:
    Description: "API GatewayID of the public Fraud CRI API, please reference the PublicFraudApiGatewayId"
    Value: !Sub "${PublicFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-FraudApiGatewayId

  PublicFraudApiBaseUrl:
    Description: "Base url of the public Fraud CRI API"
    Value: !Sub "https://${PublicFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiBaseUrl

  PublicFraudApiGatewayId:
    Description: "API GatewayID of the public Fraud CRI API"
    Value: !Sub "${PublicFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicFraudApiGatewayId

  PrivateFraudApiBaseUrl:
    Description: "Base url of the privateFraud CRI API"
    Value: !Sub "https://${PrivateFraudApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateFraudApiBaseUrl

  PrivateFraudApiGatewayId:
    Description: "API GatewayID of the private Fraud CRI API"
    Value: !Sub "${PrivateFraudApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PrivateFraudApiGatewayId
