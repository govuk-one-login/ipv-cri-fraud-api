plugins {
	id 'java'
	id "io.freefair.aspectj.post-compile-weaving" version "6.3.0"
	id "io.qameta.allure" version "2.10.0"
}

defaultTasks 'clean', 'build'

ext {
	dependencyVersions = [
		jackson_version             : "2.13.3",
		aws_sdk_version             : "1.12.153",
		aws_powertools_version      : "1.12.2",
		nimbusds_oauth_version      : "9.25",
		nimbusds_jwt_version        : "9.15.1",
		junit                       : "5.8.2",
		mockito                     : "4.7.0",

	]
}

configurations {
	aws
	jackson
	kms
	nimbus
	ssm
	tests
	test_runtime
	powertools
	logging_runtime

	cucumberRuntime {
		extendsFrom testImplementation
	}
}

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

dependencies {
	aws platform('software.amazon.awssdk:bom:2.17.191')
	kms "software.amazon.awssdk:kms"

	implementation 'io.qameta.allure:allure-maven:2.11.2'
	implementation group: 'io.qameta.allure', name: 'allure-cucumber7-jvm', version: '2.18.1'
	implementation 'com.github.automatedowl:allure-environment-writer:1.0.0'

	implementation "com.fasterxml.jackson.core:jackson-core:${dependencyVersions.jackson_version}"
	implementation "com.fasterxml.jackson.core:jackson-databind:${dependencyVersions.jackson_version}"
	implementation "com.fasterxml.jackson.core:jackson-annotations:${dependencyVersions.jackson_version}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${dependencyVersions.jackson_version}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${dependencyVersions.jackson_version}"
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:3.0.1"
	implementation "com.sun.xml.bind:jaxb-impl:3.0.2"

	implementation "software.amazon.lambda:powertools-logging:${dependencyVersions.aws_powertools_version}"
	implementation "software.amazon.lambda:powertools-metrics:${dependencyVersions.aws_powertools_version}"
	implementation	"software.amazon.lambda:powertools-parameters:${dependencyVersions.aws_powertools_version}"

	implementation "com.nimbusds:oauth2-oidc-sdk:${dependencyVersions.nimbusds_oauth_version}"
	implementation "com.nimbusds:nimbus-jose-jwt:${dependencyVersions.nimbusds_jwt_version}"

	implementation "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit}"
	implementation "org.junit.jupiter:junit-jupiter-params:${dependencyVersions.junit}"
	implementation "org.mockito:mockito-junit-jupiter:${dependencyVersions.mockito}"
	implementation "org.mockito:mockito-inline:${dependencyVersions.mockito}"
	implementation "org.hamcrest:hamcrest:2.2"

	implementation 'com.google.code.gson:gson:2.9.0'
	implementation 'org.seleniumhq.selenium:selenium-java:4.2.1'
	implementation 'io.github.bonigarcia:webdrivermanager:5.2.0'
	implementation 'io.cucumber:cucumber-java:7.3.3'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.deque:axe-selenium:3.0'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.239'

	testImplementation 'software.amazon.awssdk:s3:2.17.209'
	testImplementation 'io.rest-assured:rest-assured:5.1.1'
	testImplementation 'io.cucumber:cucumber-junit:7.3.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	test_runtime "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit}"

	aspect configurations.powertools
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

test {
	useJUnitPlatform()
	systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
}

//*************************************//
//                                     //
//    Test tasks                       //
//                                     //
//*************************************//

task cucumber() {
	dependsOn assemble, testClasses

	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
				'--plugin',
				'pretty',
				'--plugin',
				'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
				'--tags',
				"${tags}",
				'--glue',
				'gov/di_ipv_fraud/step_definitions',
				'src/test/resources' ,
				'--plugin',
				'html:build/test-results/cucmber.html',
				'--plugin',
				'json:build/test-results/cucumber.json'
			]
		}
	}
}

task fraudCriSmokeBuild() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
				'--plugin',
				'pretty',
				'--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
				'--glue',
				'gov/di_ipv_fraud/step_definitions',
				'src/test/resources/features/',
				'--tags',
				'@build-fraud'
			]
		}
	}
}

task fraudCriSmokeStaging() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
				'--plugin',
				'pretty',
				'--glue',
				'gov/di_ipv_fraud/step_definitions',
				'src/test/resources/features/',
				'--tags',
				'@staging-fraud'
			]
		}
	}
}


apply plugin: 'java'
